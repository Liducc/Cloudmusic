{"ast":null,"code":"import { getIcon } from '@/request/api/home.js';\nimport { reactive, onMounted, ref } from 'vue';\nexport default {\n  setup() {\n    const images = reactive({\n      list: []\n    });\n    const touchStartX = ref(0);\n    const touchEndX = ref(0);\n    function handleTouchStart(event) {\n      touchStartX.value = event.touches[0].clientX;\n    }\n    function handleTouchEnd(event) {\n      touchEndX.value = event.changedTouches[0].clientX;\n      handleSwipe();\n    }\n    function handleSwipe() {\n      if (touchEndX.value - touchStartX.value > 100) {\n        images.list.forEach((image, index) => {\n          if (index >= 5) {\n            return;\n          }\n          const span = document.querySelectorAll('.swipe span')[index];\n          span.classList.add('hidden');\n        });\n      } else if (touchStartX.value - touchEndX.value > 100) {\n        images.list.forEach((image, index) => {\n          if (index >= 5) {\n            return;\n          }\n          const span = document.querySelectorAll('.swipe span')[index];\n          span.classList.remove('hidden');\n        });\n      }\n    }\n    onMounted(async () => {\n      try {\n        const res = await getIcon();\n        images.list = res.data.data;\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return {\n      images,\n      handleTouchStart,\n      handleTouchEnd\n    };\n  }\n};","map":{"version":3,"names":["getIcon","reactive","onMounted","ref","setup","images","list","touchStartX","touchEndX","handleTouchStart","event","value","touches","clientX","handleTouchEnd","changedTouches","handleSwipe","forEach","image","index","span","document","querySelectorAll","classList","add","remove","res","data","error","console"],"sources":["E:\\musicdemo\\Cloudmusic\\cloudmusic-app\\src\\components\\home\\IconList.vue"],"sourcesContent":["<template>\r\n    <div class=\"swipe\" @touchstart=\"handleTouchStart\" @touchend=\"handleTouchEnd\">\r\n        <span v-for=\"(ima, index) in images.list\" :key=\"index\" :class=\"{ hidden: index >= 5 }\">\r\n            <img :src=\"ima.iconUrl\" />\r\n            <p>{{ ima.name }}</p>\r\n        </span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getIcon } from '@/request/api/home.js'\r\nimport { reactive, onMounted, ref } from 'vue'\r\n\r\nexport default {\r\n    setup() {\r\n        const images = reactive({\r\n            list: []\r\n        })\r\n\r\n        const touchStartX = ref(0)\r\n        const touchEndX = ref(0)\r\n\r\n        function handleTouchStart(event) {\r\n            touchStartX.value = event.touches[0].clientX\r\n        }\r\n\r\n        function handleTouchEnd(event) {\r\n            touchEndX.value = event.changedTouches[0].clientX\r\n            handleSwipe()\r\n        }\r\n\r\n        function handleSwipe() {\r\n            if (touchEndX.value - touchStartX.value > 100) {\r\n                images.list.forEach((image, index) => {\r\n                    if (index >= 5) {\r\n                        return\r\n                    }\r\n                    const span = document.querySelectorAll('.swipe span')[index]\r\n                    span.classList.add('hidden')\r\n                })\r\n            } else if (touchStartX.value - touchEndX.value > 100) {\r\n                images.list.forEach((image, index) => {\r\n                    if (index >= 5) {\r\n                        return\r\n                    }\r\n                    const span = document.querySelectorAll('.swipe span')[index]\r\n                    span.classList.remove('hidden')\r\n                })\r\n            }\r\n        }\r\n\r\n        onMounted(async () => {\r\n            try {\r\n                const res = await getIcon()\r\n                images.list = res.data.data\r\n            } catch (error) {\r\n                console.error(error)\r\n            }\r\n        })\r\n\r\n        return { images, handleTouchStart, handleTouchEnd }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\nimg {\r\n    width: 1rem;\r\n    height: 1rem;\r\n    border-radius: 100%;\r\n    background: rgb(254, 90, 89);\r\n}\r\n\r\n.swipe {\r\n    display: flex;\r\n    overflow-y: auto;\r\n    text-align: center;\r\n}\r\n\r\n.swipe::-webkit-scrollbar {\r\n    display: none;\r\n}\r\n\r\n.swipe span {\r\n    margin: 18px 0px 0px 21.5px;\r\n}\r\n\r\n.swipe p {\r\n    font-size: 0.1rem;\r\n    align-items: center;\r\n    opacity: 0.7;\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n</style>"],"mappings":"AAUA,SAASA,OAAM,QAAS,uBAAsB;AAC9C,SAASC,QAAQ,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAI;AAE7C,eAAe;EACXC,KAAKA,CAAA,EAAG;IACJ,MAAMC,MAAK,GAAIJ,QAAQ,CAAC;MACpBK,IAAI,EAAE;IACV,CAAC;IAED,MAAMC,WAAU,GAAIJ,GAAG,CAAC,CAAC;IACzB,MAAMK,SAAQ,GAAIL,GAAG,CAAC,CAAC;IAEvB,SAASM,gBAAgBA,CAACC,KAAK,EAAE;MAC7BH,WAAW,CAACI,KAAI,GAAID,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAM;IAC/C;IAEA,SAASC,cAAcA,CAACJ,KAAK,EAAE;MAC3BF,SAAS,CAACG,KAAI,GAAID,KAAK,CAACK,cAAc,CAAC,CAAC,CAAC,CAACF,OAAM;MAChDG,WAAW,CAAC;IAChB;IAEA,SAASA,WAAWA,CAAA,EAAG;MACnB,IAAIR,SAAS,CAACG,KAAI,GAAIJ,WAAW,CAACI,KAAI,GAAI,GAAG,EAAE;QAC3CN,MAAM,CAACC,IAAI,CAACW,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;UAClC,IAAIA,KAAI,IAAK,CAAC,EAAE;YACZ;UACJ;UACA,MAAMC,IAAG,GAAIC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACH,KAAK;UAC3DC,IAAI,CAACG,SAAS,CAACC,GAAG,CAAC,QAAQ;QAC/B,CAAC;MACL,OAAO,IAAIjB,WAAW,CAACI,KAAI,GAAIH,SAAS,CAACG,KAAI,GAAI,GAAG,EAAE;QAClDN,MAAM,CAACC,IAAI,CAACW,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;UAClC,IAAIA,KAAI,IAAK,CAAC,EAAE;YACZ;UACJ;UACA,MAAMC,IAAG,GAAIC,QAAQ,CAACC,gBAAgB,CAAC,aAAa,CAAC,CAACH,KAAK;UAC3DC,IAAI,CAACG,SAAS,CAACE,MAAM,CAAC,QAAQ;QAClC,CAAC;MACL;IACJ;IAEAvB,SAAS,CAAC,YAAY;MAClB,IAAI;QACA,MAAMwB,GAAE,GAAI,MAAM1B,OAAO,CAAC;QAC1BK,MAAM,CAACC,IAAG,GAAIoB,GAAG,CAACC,IAAI,CAACA,IAAG;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK;MACvB;IACJ,CAAC;IAED,OAAO;MAAEvB,MAAM;MAAEI,gBAAgB;MAAEK;IAAe;EACtD;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}